# Load the necessary .NET types for the GUI
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Create the form
$form = New-Object System.Windows.Forms.Form
$form.Text = "CPU and RAM Usage Log Generator"
$form.Size = New-Object System.Drawing.Size(400, 350)
$form.StartPosition = "CenterScreen"

# Create labels and textboxes for inputs
$startDateLabel = New-Object System.Windows.Forms.Label
$startDateLabel.Text = "Start Date (yyyy-MM-dd HH:mm):"
$startDateLabel.AutoSize = $true
$startDateLabel.Location = New-Object System.Drawing.Point(10, 20)
$form.Controls.Add($startDateLabel)

$startDateTextBox = New-Object System.Windows.Forms.TextBox
$startDateTextBox.Text = (Get-Date).ToString("yyyy-MM-dd HH:mm")
$startDateTextBox.Location = New-Object System.Drawing.Point(200, 20)
$form.Controls.Add($startDateTextBox)

$endDateLabel = New-Object System.Windows.Forms.Label
$endDateLabel.Text = "End Date (yyyy-MM-dd HH:mm):"
$endDateLabel.AutoSize = $true
$endDateLabel.Location = New-Object System.Drawing.Point(10, 60)
$form.Controls.Add($endDateLabel)

$endDateTextBox = New-Object System.Windows.Forms.TextBox
$endDateTextBox.Text = (Get-Date).AddDays(5).ToString("yyyy-MM-dd HH:mm")
$endDateTextBox.Location = New-Object System.Drawing.Point(200, 60)
$form.Controls.Add($endDateTextBox)

$workdayLabel = New-Object System.Windows.Forms.Label
$workdayLabel.Text = "Workdays (e.g., Mon, Tue, ...):"
$workdayLabel.AutoSize = $true
$workdayLabel.Location = New-Object System.Drawing.Point(10, 100)
$form.Controls.Add($workdayLabel)

$workdayTextBox = New-Object System.Windows.Forms.TextBox
$workdayTextBox.Text = "Monday,Tuesday,Wednesday,Thursday,Friday"
$workdayTextBox.Location = New-Object System.Drawing.Point(200, 100)
$form.Controls.Add($workdayTextBox)

$hoursLabel = New-Object System.Windows.Forms.Label
$hoursLabel.Text = "Work hours (HH:MM-HH:MM):"
$hoursLabel.AutoSize = $true
$hoursLabel.Location = New-Object System.Drawing.Point(10, 140)
$form.Controls.Add($hoursLabel)

$hoursTextBox = New-Object System.Windows.Forms.TextBox
$hoursTextBox.Text = "08:00-17:00"
$hoursTextBox.Location = New-Object System.Drawing.Point(200, 140)
$form.Controls.Add($hoursTextBox)

$highLoadDayLabel = New-Object System.Windows.Forms.Label
$highLoadDayLabel.Text = "High Load Day (e.g., Friday):"
$highLoadDayLabel.AutoSize = $true
$highLoadDayLabel.Location = New-Object System.Drawing.Point(10, 180)
$form.Controls.Add($highLoadDayLabel)

$highLoadDayTextBox = New-Object System.Windows.Forms.TextBox
$highLoadDayTextBox.Text = "Friday"
$highLoadDayTextBox.Location = New-Object System.Drawing.Point(200, 180)
$form.Controls.Add($highLoadDayTextBox)

$highLoadPercentageLabel = New-Object System.Windows.Forms.Label
$highLoadPercentageLabel.Text = "Percentage of Higher Load (e.g., 50):"
$highLoadPercentageLabel.AutoSize = $true
$highLoadPercentageLabel.Location = New-Object System.Drawing.Point(10, 220)
$form.Controls.Add($highLoadPercentageLabel)

$highLoadPercentageTextBox = New-Object System.Windows.Forms.TextBox
$highLoadPercentageTextBox.Text = "50"
$highLoadPercentageTextBox.Location = New-Object System.Drawing.Point(200, 220)
$form.Controls.Add($highLoadPercentageTextBox)

# Create a button to start the script
$okButton = New-Object System.Windows.Forms.Button
$okButton.Text = "Generate"
$okButton.Location = New-Object System.Drawing.Point(150, 260)
$okButton.Add_Click({
    # Read values from the textboxes
    $startDate = [datetime]::ParseExact($startDateTextBox.Text, 'yyyy-MM-dd HH:mm', $null)
    $endDate = [datetime]::ParseExact($endDateTextBox.Text, 'yyyy-MM-dd HH:mm', $null)
    $workdays = $workdayTextBox.Text.Split(",")
    $workHours = $hoursTextBox.Text.Split("-")
    $workStartHour = [datetime]::ParseExact($workHours[0], "HH:mm", $null)
    $workEndHour = [datetime]::ParseExact($workHours[1], "HH:mm", $null)
    $highLoadDay = $highLoadDayTextBox.Text
    $highLoadMultiplier = 1 + ([double]$highLoadPercentageTextBox.Text / 100)

    # Parameters
    $cpuWeekdayMin = 5  # CPU usage range for weekdays (min)
    $cpuWeekdayMax = 85  # CPU usage range for weekdays (max)
    $timeInterval = New-TimeSpan -Minutes 15  # 15-minute intervals

    # Initialize current time
    $current_time = $startDate
    $data = @()

    # Function to generate random CPU usage and ensure it does not exceed 100%
    function Get-RandomCpuUsage {
        param (
            [double]$min,
            [double]$max
        )
        $random = Get-Random -Minimum $min -Maximum $max
        return [math]::Min([math]::Round($random, 2), 100)  # Ensure the value does not exceed 100%
    }

    # Function to calculate RAM usage as 12% more than CPU usage but ensure it does not exceed 100%
    function Get-RamUsage {
        param (
            [double]$cpuUsage
        )
        $ramUsage = $cpuUsage * 1.12
        return [math]::Min([math]::Round($ramUsage, 2), 100)  # Ensure RAM usage doesn't go above 100%
    }

    # Loop to generate CPU and RAM usage data for defined workdays and work hours
    while ($current_time -le $endDate) {
        $currentDayName = $current_time.DayOfWeek.ToString()

        # Only generate logs during workdays and work hours
        if ($workdays -contains $currentDayName -and ($current_time.TimeOfDay -ge $workStartHour.TimeOfDay) -and ($current_time.TimeOfDay -lt $workEndHour.TimeOfDay)) {
            if ($currentDayName -eq $highLoadDay) {
                # CPU usage for the high load day (e.g., Friday) with a multiplier
                $cpu_usage = Get-RandomCpuUsage -min ($cpuWeekdayMin * $highLoadMultiplier) -max ($cpuWeekdayMax * $highLoadMultiplier)
            } else {
                # CPU usage for regular weekdays
                $cpu_usage = Get-RandomCpuUsage -min $cpuWeekdayMin -max $cpuWeekdayMax
            }

            # Calculate corresponding RAM usage as 12% more than CPU usage
            $ram_usage = Get-RamUsage -cpuUsage $cpu_usage

            # Add data to array
            $data += [PSCustomObject]@{
                "date" = $current_time.ToString("dd.MM.yyyy HH:mm")
                "Percentage CPU (Avg)" = $cpu_usage
                "Percentage RAM (Avg)" = $ram_usage
            }
        }

        # Increment current time by the time interval
        $current_time = $current_time.Add($timeInterval)
    }

    # Convert the data to CSV and save it to a file
    $data | Export-Csv -Path "C:\temp\cpu_ram_usage_with_gui.csv" -NoTypeInformation

    # Show a message box after generation
    [System.Windows.Forms.MessageBox]::Show("Logs have been generated and saved to C:\temp\cpu_ram_usage_with_gui.csv", "Success")

    # Close the form
    $form.Close()
})

$form.Controls.Add($okButton)

# Show the form
$form.ShowDialog()
